<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flchy.blog.inlets.mapper.CommentMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.flchy.blog.pojo.Comment">
		<id column="id" property="id" />
		<result column="upperId" property="upperId" />
		<result column="articleId" property="articleId" />
		<result column="nickname" property="nickname" />
		<result column="mail" property="mail" />
		<result column="url" property="url" />
		<result column="comment" property="comment" />
		<result column="status" property="status" />
		<result column="create_time" property="createTime" />
		<result column="send" property="send" />
		<result column="notice" property="notice" />
		<result column="is_admin" property="isAdmin" />
		<result column="browser_name" property="browserName" />
		<result column="os_name" property="osName" />
		<result column="ua" property="ua" />
		<result column="image_path" property="imagePath" />
		<result column="client_ip" property="clientIp" />
		<result column="server_ip" property="serverIp" />
	</resultMap>
	
	<select id="selectWebComment"  parameterType="java.util.Map" resultType="com.flchy.blog.pojo.Comment">
		<foreach collection="list" item="item" separator=" UNION ALL ">
			select id,upperId,articleId,nickname,url,`comment`,`status`,create_time 'createTime',send,notice,is_admin 'isAdmin',image_path 'imagePath',os_name 'osName',browser_name 'browserName'  from  `comment`  
			<where>
			<choose>
			<when test="item.nickName != null and item.nickName !=''">
		    ( `status` =#{item.status} or (`status`=2 or nickname=#{item.nickName}))
			 AND
			FIND_IN_SET(id, getChildLstName(#{item.id},#{item.articleId},#{item.status},#{item.nickName}))
		    </when>
		    <otherwise>
		     status=#{item.status}
			 AND
			FIND_IN_SET(id, getChildLst(#{item.id},#{item.articleId},#{item.status}))
		    </otherwise>
		    </choose>
		    </where>
		</foreach>
	</select>


<!-- 
存储过程等
CREATE FUNCTION `getChildLst`(rootId INT,article Int,statuss Int) 
RETURNS varchar(1000) 
 BEGIN 
 DECLARE sTemp VARCHAR(1000); 
DECLARE sTempChd VARCHAR(1000); 
 SET sTemp = '$'; 
 SET sTempChd =cast(rootId as CHAR); 
 WHILE sTempChd is not null DO 
 SET sTemp = concat(sTemp,',',sTempChd); 
 SELECT group_concat(id) INTO sTempChd FROM `comment` where articleId=article and `STATUS`= statuss and  FIND_IN_SET(upperId,sTempChd)>0; 
 END WHILE; 
 RETURN sTemp; 
 END 
 
 
 CREATE FUNCTION `getChildLstName`(rootId INT,article Int,statuss Int,nname  varchar(50) ) 
RETURNS varchar(1000) 
 BEGIN 
 DECLARE sTemp VARCHAR(1000); 
DECLARE sTempChd VARCHAR(1000); 
 SET sTemp = '$'; 
 SET sTempChd =cast(rootId as CHAR); 
 WHILE sTempChd is not null DO 
 SET sTemp = concat(sTemp,',',sTempChd); 
 SELECT group_concat(id) INTO sTempChd FROM `comment` where articleId=article and (`STATUS`= statuss or (`status`=2 and nickname=nname)) and  FIND_IN_SET(upperId,sTempChd)>0; 
 END WHILE; 
 RETURN sTemp; 
 END 
 
select getChildLst(-1); 

select * from  `comment`  where FIND_IN_SET(upperId, getChildLst(-1)); 

select * from  `comment`  where  `status`=1 and  id in( 
     select id from  `comment` where FIND_IN_SET(upperId, getChildLst(-1)) 
); 
 -->
 
 
 
 <select id="selectCommentPage" resultType="java.util.Map">
	 SELECT
		cc.nickname 'upperNickname',
		a.title,
		c.`id`,
		c.`upperId`,
		c.`articleId`,
		c.`nickname`,
		c.`mail`,
		c.`url`,
		c.`comment`,
		c.`is_admin` 'isAdmin',
		c.`browser_name` 'browserName',
		c.`os_name` 'osName',
		c.`ua`,
		c.`status`,
		c.`create_time` 'createTime',
		c.`send`,
		c.`server_ip` 'serverIp',
		c.`client_ip` 'clientIp',
		c.`image_path` 'imagePath',
		c.`notice`
	FROM
		(
			SELECT
				*
			FROM
				`comment`
				<where>
					<if test="status != null and status != '' ">
					and `status`=#{status}
					</if>
					<if test="nickname != null and nickname != '' ">
					and `nickname`  LIKE concat(concat('%',#{nickname}),'%')
					</if>
					<if test="articleId != null and articleId != '' ">
					and `articleId`  = #{articleId}
					</if>
				</where>
		) c
	LEFT JOIN article a ON a.id = c.articleId
	LEFT JOIN `comment` cc ON cc.upperId = c.id
	ORDER BY
		c.`create_time` DESC
 </select>
</mapper>
